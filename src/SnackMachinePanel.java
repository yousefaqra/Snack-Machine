/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class SnackMachinePanel extends javax.swing.JFrame {
    
    
    SnackMachine snacks = new SnackMachine();
    
    Snack selectedSnack ;
    
    String snackNumber = null;
    
    String insertedCoin, insertedNote, insertedCardNum = null;
    
    int flag=0;// select snack:0 , 1 choos payment mehtod:1 , insert money:2, finish:3. 
    
    int paymentMethod = 0; // coins:0 , notes:1 , cards:2
    
    int validate , totalMoney;
    
    

    /**
     * Creates new form SnackMachinePanel
     */
    public SnackMachinePanel() {
        initComponents();
        snacks.fillMachine();
        msg.setText("Hello Customer,kindly enter the number of the snack you desire between 1 and 25 then press Ok to complete...");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        msg = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        userInput = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Snack Machine");

        msg.setText("insert the number of the item from 1-25");

        jButton1.setBackground(new java.awt.Color(255, 255, 0));
        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 0));
        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 0));
        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 255, 0));
        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 0));
        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(255, 255, 0));
        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(255, 255, 0));
        jButton10.setText("0");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 0));
        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(255, 255, 0));
        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 255, 0));
        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton7)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addGap(16, 16, 16))
        );

        jButton12.setBackground(new java.awt.Color(255, 0, 0));
        jButton12.setText("CANCEL");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setBackground(new java.awt.Color(51, 255, 51));
        jButton13.setText("BUY");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(255, 255, 0));
        jButton11.setText("OK");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        userInput.setText("25");

        jButton14.setText("PICKUP");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(userInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12)
                        .addGap(18, 18, 18)
                        .addComponent(jButton14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jButton13)
                                .addGap(18, 18, 18)
                                .addComponent(jButton11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton14)))
                .addGap(78, 78, 78))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(flag==0)
        {
              if(snackNumber==null)
        snackNumber = "1";
        else
            snackNumber +="1";
        
        userInput.setText(snackNumber);
        }
        else if(flag==1)
        {
            msg.setText("Enter the value of the coin in cents:10c,20c,50c,100c. Press OK each time to Insert the value");
            
            paymentMethod = 0;
            
            flag = 2;
        }
        else if(flag==2)
        {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "1";
                }
                else
                {
                    insertedCoin  += "1";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "1";
                }
                else
                {
                    insertedNote  += "1";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "1";
                 }
                 else
                 {
                     insertedCardNum +="1";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
            
            
        }
        
      
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
            if(snackNumber==null)
        snackNumber = "2";
        else
            snackNumber +="2";
         
         userInput.setText(snackNumber);
        }
        else if(flag==1)
        {
            msg.setText("Enter the value of the coin in notes:20$, 50$. Press OK each time to insert the value");
            
            paymentMethod = 1;
            
            flag = 2;
        }
            else if(flag==2)
        {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "2";
                }
                else
                {
                    insertedCoin  += "2";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "2";
                }
                else
                {
                    insertedNote  += "2";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "2";
                 }
                 else
                 {
                     insertedCardNum +="2";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
         
        
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
              if(snackNumber==null)
        snackNumber = "3";
        else
            snackNumber +="3";
         
         userInput.setText(snackNumber);
        }
        else if(flag==1)
        {
            msg.setText("Enter the number of you card ,Press OK when you finish to validate your card");
            
            paymentMethod = 2;
            
            flag = 2;
        
        }
            else if(flag==2)
       {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "3";
                }
                else
                {
                    insertedCoin  += "3";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "1";
                }
                else
                {
                    insertedNote  += "3";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "3";
                 }
                 else
                 {
                     insertedCardNum +="3";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
       
        
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
               if(snackNumber==null)
        snackNumber = "4";
        else
            snackNumber +="4";
         
         userInput.setText(snackNumber);
        }
        else if(flag==1)
        {
            msg.setText("Press 1 for coins , Press 2 for Notes , Press 3 for Card");
            
        
        }
            else if(flag==2)
       {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "4";
                }
                else
                {
                    insertedCoin  += "4";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "4";
                }
                else
                {
                    insertedNote  += "4";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "4";
                 }
                 else
                 {
                     insertedCardNum +="4";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
      
        
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
            if(snackNumber==null)
        snackNumber = "5";
        else
            snackNumber +="5";
         
         userInput.setText(snackNumber);
        }
         else if(flag==1)
        {
            msg.setText("Press 1 for coins , Press 2 for Notes , Press 3 for Card");
            
        
        }
            else if(flag==2)
        {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "5";
                }
                else
                {
                    insertedCoin  += "5";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "5";
                }
                else
                {
                    insertedNote  += "5";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "5";
                 }
                 else
                 {
                     insertedCardNum +="5";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
         
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
            if(snackNumber==null)
        snackNumber = "6";
        else
            snackNumber +="6";
         
         userInput.setText(snackNumber);
        }
        else if(flag==1)
        {
            msg.setText("Press 1 for coins , Press 2 for Notes , Press 3 for Card");
            
        
        }
            else if(flag==2)
        {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "6";
                }
                else
                {
                    insertedCoin  += "6";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "6";
                }
                else
                {
                    insertedNote  += "6";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "6";
                 }
                 else
                 {
                     insertedCardNum +="6";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
         
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
             if(snackNumber==null)
        snackNumber = "7";
        else
            snackNumber +="7";
         
         userInput.setText(snackNumber);
        }
        else if(flag==1)
        {
            msg.setText("Press 1 for coins , Press 2 for Notes , Press 3 for Card");
            
        
        }
            else if(flag==2)
        {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "7";
                }
                else
                {
                    insertedCoin  += "7";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "7";
                }
                else
                {
                    insertedNote  += "7";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "7";
                 }
                 else
                 {
                     insertedCardNum +="7";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
        
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
            if(snackNumber==null)
        snackNumber = "8";
        else
            snackNumber +="8";
         
         userInput.setText(snackNumber);
        }
        else if(flag==1)
        {
            msg.setText("Press 1 for coins , Press 2 for Notes , Press 3 for Card");
            
        
        }
            else if(flag==2)
       {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "8";
                }
                else
                {
                    insertedCoin  += "8";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "8";
                }
                else
                {
                    insertedNote  += "8";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "8";
                 }
                 else
                 {
                     insertedCardNum +="8";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
         
        
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
            if(snackNumber==null)
        snackNumber = "9";
        else
            snackNumber +="9";
         
         userInput.setText(snackNumber);
        }
        else if(flag==1)
        {
            msg.setText("Press 1 for coins , Press 2 for Notes , Press 3 for Card");
            
        
        }
            else if(flag==2)
        {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "9";
                }
                else
                {
                    insertedCoin  += "9";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "9";
                }
                else
                {
                    insertedNote  += "9";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "9";
                 }
                 else
                 {
                     insertedCardNum +="9";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
         
        
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
         if(flag==0)
        {
            snackNumber +="0";
            
            userInput.setText(snackNumber);
        }
       else if(flag==1)
        {
            msg.setText("Press 1 for coins , Press 2 for Notes , Press 3 for Card");
            
        
        }
            else if(flag==2)
       {
            if(paymentMethod==0)
            {
                //handel coins
                
                if(insertedCoin==null)
                {
                    insertedCoin = "0";
                }
                else
                {
                    insertedCoin  += "0";
                }
                
                userInput.setText(insertedCoin);
            }
            else if(paymentMethod==1)
            {
                //handelNotes
                
                 if(insertedNote==null)
                {
                    insertedNote = "0";
                }
                else
                {
                    insertedNote  += "0";
                }
                
                userInput.setText(insertedNote);
            }
            else
            {
                //handel Card
                 if(insertedCardNum==null)
                 {
                     insertedCardNum = "0";
                 }
                 else
                 {
                     insertedCardNum +="0";
                 }
                 
                 userInput.setText(insertedCardNum);
            }
        }
        
            
        
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        
        if(flag==0)
        {
             
        if(snackNumber!=null)
        {
            int number = Integer.parseInt(snackNumber);
            
            if(number>0&&number<26)
            {
                selectedSnack = snacks.selectSnack(number);
                
                if(selectedSnack==null)
                {
                    msg.setText("Hey! The selected snack is no longer available , try onther snack");
                    selectedSnack = null;
                    snackNumber = null;
                    userInput.setText("");
                }
                else
                {
                    msg.setText("Hurray! Snack is available for number " + number + " and it costs "
						+ selectedSnack.getPrice() + "cents. Press OK to compelet");
                    
                    userInput.setText("");
                    flag = 1;
                }
            }
            else
            {
                msg.setText("Please enter a valid snack number.");
                snackNumber = null;
                userInput.setText("");
            }
                
        }
        else
        {
            msg.setText("Please enter a snack number!");
        }
        }
        else if(flag==1)
        {
            msg.setText("For Coins , Press 1. For Notes, Press 2. For Card, Press 3.");
            
            
        }
        else if(flag==2)
        {
            String str;
            
            
            
            
            
            if(paymentMethod==0)
            {
                validate = PaymentHandler.handlePayment(1,selectedSnack.getPrice(),Integer.parseInt(insertedCoin));
                insertedCoin = null;
                
                if(validate==0)
                {
                     msg.setText("Hey, that coin is invalid, please try again using valid coin");
                     str = Integer.toString(totalMoney);
                     userInput.setText(str);
                }
                else
                {
                    totalMoney += validate;
                    str = Integer.toString(validate);
                    msg.setText("Valid Coin: "+str+ ", Total Money : "+totalMoney+"cents.   for insert more press OK . Press BUY to purchase the snack!" );
                    flag = 1;
                }
            }
            
            
            
            
            else if(paymentMethod==1)
            {
                validate = PaymentHandler.handlePayment(2,selectedSnack.getPrice(),Integer.parseInt(insertedNote));
                insertedNote = null;
                
                if(validate==0)
                {
                    msg.setText("Hey, that note is invalid. please try again using valid note.");
                    str = Integer.toString(totalMoney);
                    userInput.setText(str);
                }
                else
                {
                    totalMoney += validate;
                    str = Integer.toString(validate);
                    msg.setText("Valid Note: "+str+ ", Total Money : "+totalMoney+"cents.   for insert more press OK . Press BUY to purchase the snack!" );
                    flag = 1;
                }
            }
            
            else if(paymentMethod==2)
            {
                validate = PaymentHandler.handlePayment(3,selectedSnack.getPrice(),Integer.parseInt(insertedCardNum));
                insertedCardNum = null;
                
                if(validate==0)
                {
                    msg.setText("Hey, that card is invalid. Please try again using vaild card");
                }
                else
                {
                    msg.setText("Your card's valid , prees BUY to purchase the snack!");
                }
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        
      reset();
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        
        if(paymentMethod==2)
        {
             msg.setText("Pick up your item. Have a nice day!");
        }
        else
        {
        
        int change = PaymentHandler.purchase(selectedSnack.getPrice(), totalMoney);
        
        if(change==0)
        {
            msg.setText("Invalid payment value "+totalMoney+"cents");
        }
        else 
        {
            msg.setText("Your change in cents is: "+change+"cents.  Pick up your item. Have a nice day!");
        }
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        
        reset();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void reset()
    {
        
        if(totalMoney==0)
        {
          flag = 0;
        
        snackNumber = null;
        
        selectedSnack = null;
        
        msg.setText("Hello Customer,kindly enter the number of the snack you desire between 1 and 25 then press Ok to complete...");
        
        userInput.setText("");
        }
        else{
           if(paymentMethod!=2)
           {
            msg.setText("pick up your money"+totalMoney+"cents");
           totalMoney = 0;
           }
           else 
           {
               msg.setText("pick up your card");
               totalMoney = 0;
           }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SnackMachinePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SnackMachinePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SnackMachinePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SnackMachinePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SnackMachinePanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel msg;
    private javax.swing.JLabel userInput;
    // End of variables declaration//GEN-END:variables

    private String StringValueOf(int validate) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
